<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[spring boot 初体验1]]></title>
      <url>%2F2017%2F02%2F20%2Fspring-boot-%E5%88%9D%E4%BD%93%E9%AA%8C1%2F</url>
      <content type="text"><![CDATA[spring boot web开发初体验1 spring boot安装开发环境：mint18 安装java，maven，gradle123456sudo apt-get install openjdk-8-jdksudo apt-get install mavencurl -s get.sdkman.io | bashsource &quot;$HOME/.sdkman/bin/sdkman-init.sh&quot; #初始化sdkmansdk install gradle #安装gradlesdk install springboot maven需要修改repo为阿里的repo，编辑/etc/maver/setting.xml，在mirrors中添加123456&lt;mirror&gt; &lt;id&gt;alimaven&lt;/id&gt; &lt;name&gt;aliyun maven&lt;/name&gt; &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt; &lt;mirrorOf&gt;central&lt;/mirrorOf&gt; &lt;/mirror&gt; 2 创建POM文件创建一个maven 的pom.xml文件，将下面的样例copy进去： 12345678910111213141516171819202122232425262728293031323334353637383940&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;groupId&gt;com.example&lt;/groupId&gt; &lt;artifactId&gt;myproject&lt;/artifactId&gt; &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt; &lt;parent&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt; &lt;version&gt;2.0.0.BUILD-SNAPSHOT&lt;/version&gt; &lt;/parent&gt; &lt;!-- Additional lines to be added here... --&gt; &lt;!-- (you don&apos;t need this if you are using a .RELEASE version) --&gt; &lt;repositories&gt; &lt;repository&gt; &lt;id&gt;spring-snapshots&lt;/id&gt; &lt;url&gt;http://repo.spring.io/snapshot&lt;/url&gt; &lt;snapshots&gt;&lt;enabled&gt;true&lt;/enabled&gt;&lt;/snapshots&gt; &lt;/repository&gt; &lt;repository&gt; &lt;id&gt;spring-milestones&lt;/id&gt; &lt;url&gt;http://repo.spring.io/milestone&lt;/url&gt; &lt;/repository&gt; &lt;/repositories&gt; &lt;pluginRepositories&gt; &lt;pluginRepository&gt; &lt;id&gt;spring-snapshots&lt;/id&gt; &lt;url&gt;http://repo.spring.io/snapshot&lt;/url&gt; &lt;/pluginRepository&gt; &lt;pluginRepository&gt; &lt;id&gt;spring-milestones&lt;/id&gt; &lt;url&gt;http://repo.spring.io/milestone&lt;/url&gt; &lt;/pluginRepository&gt; &lt;/pluginRepositories&gt;&lt;/project&gt; 执行 mvn package 下载测试pom文件 3 添加classpath依赖Spring Boot提供了许多“启动器”，使得容易将jar添加到类路径。 示例应用程序已经在POM的父部分中使用了spring-boot-starter-parent。 spring-boot-starter-parent是一个特殊的启动器，提供了有用的Maven默认值。 它还提供了一个依赖关系管理部分，以便您可以省略依赖关系的版本标签。 其他“Starters”只是提供了开发特定类型应用程序时可能需要的依赖关系。 由于我们正在开发一个Web应用程序，我们将添加一个spring-boot-starter-web依赖关系mvn dependency：tree命令打印项目依赖关系的树表示。 您可以看到，spring-boot-starter-parent本身不提供依赖性。 让我们编辑我们的pom.xml，并在parent部分下面添加spring-boot-starter-web依赖123456&lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; &lt;/dependency&gt;&lt;/dependencies&gt; 如果再次运行mvn dependency：tree，将看到现在还有许多其他依赖项，包括Tomcat Web服务器和Spring Boot本身。 4 测试代码添加src/main/java/Example.java文件12345678910111213141516171819import org.springframework.boot.*;import org.springframework.boot.autoconfigure.*;import org.springframework.stereotype.*;import org.springframework.web.bind.annotation.*;@RestController@EnableAutoConfigurationpublic class Example &#123; @RequestMapping(&quot;/&quot;) String home() &#123; return &quot;Hello World!&quot;; &#125; public static void main(String[] args) throws Exception &#123; SpringApplication.run(Example.class, args); &#125;&#125; Example的@RestController注解，表示这个类是一个web控制器，来处理web请求@RequestMapping 表示一个路由请求 @EnableAutoConfiguration 告诉spring boot基于你添加的包的依赖如何配置spring boot，由于 spring-boot-starter-web 添加了tomcat及Spring MVC，自动配置假设你在开发一个web应用main函数是一个遵照java约定标准方法，用于应用程序的启动入口。我们的main方法通过调用run来委托Spring Boot的SpringApplication类，SpringApplication将引导我们的应用程序，启动Spring，从而启动自动配置的Tomcat Web服务器。 我们需要传递Example.class作为run方法的参数来告诉SpringApplication这是主要的Spring组件。 5 运行应用程序运行mvn spring-boot:run,然后通过8080端口访问 6 创建一个可执行的jar文件要创建可执行的jar，我们需要将spring-boot-maven-plugin添加到我们的pom.xml中。 在dependencies部分下面插入以下行：12345678&lt;build&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt; &lt;/plugin&gt; &lt;/plugins&gt;&lt;/build&gt; 运行 mvn package 打包，查看target目录生成myproject-0.0.1-SNAPSHOT.jar文件，myproject-0.0.1-SNAPSHOT.jar.original文件为打包为spring boot前的文件。运行应用程序通过下面的命令java -jar target/myproject-0.0.1-SNAPSHOT.jar 参考：https://docs.spring.io/spring-boot/docs/current-SNAPSHOT/reference/htmlsingle/#getting-started-first-application]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[第一篇博客]]></title>
      <url>%2F2017%2F02%2F19%2F%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%2F</url>
      <content type="text"><![CDATA[终于决定要些博客了，对于一个语文一直不及格的人，写博客这种事总觉得不是一件发自内心且持之以恒的事。但是随着年纪的增加，家庭工作的压力，精力记忆力已经大不如前了，但反而是这种条件，是我变得比以前能稍微勤奋一点点，想着通过记录来将工作和家庭里的一些事情记录下来，以便再老了之后可以通过这一篇篇的博客，来回忆一些事情。 另一方面也是可以将我工作中的一些心得体会记录下来，希望可以对遇到相同问题的人一些帮助，同时纠正我理解中的一些错误。 我争取写的时候都思考一些，努力让自己的话清晰明了，提高自己的写作能力与写作兴趣。 还有一年就第三个本命年了，希望自己别被年龄打败。]]></content>
    </entry>

    
  
  
</search>
